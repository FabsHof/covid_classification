[project]
name = "covid-classification"
version = "0.1.0"
description = "A project for classifying COVID-19 related X-ray images."
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "numpy>=1.24.0",
    "opencv-python>=4.12.0.88",
    "openpyxl>=3.1.5",
    "pandas>=2.3.1",
    "pre-commit>=4.2.0",
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "python-dotenv>=1.0.0",
    "seaborn>=0.13.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 80
include = '(src|notebooks)/.*(ipynb|py)$'

[tool.isort]
profile = 'black'
src_paths = ['src', 'notebooks']
skip = ['.venv', '.history', '__pycache__']

[dependency-groups]
dev = [
    "ipykernel>=6.30.1",
]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
]
release = [
    "python-semantic-release>=9.8.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "-ra",
]
# Coverage settings (optional for development)
# Uncomment below for coverage reports:
# addopts = [
#     "--cov=src",
#     "--cov-report=term-missing", 
#     "--cov-report=html",
#     "--cov-fail-under=80",
# ]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
version_variables = [
    "src/__init__.py:__version__",
]
build_command = "uv build"
major_on_zero = false
commit_message = "ðŸ”– {version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = [
    "chore\\(release\\):",
    "Merge pull request",
]
